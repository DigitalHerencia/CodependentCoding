openapi: 3.0.1
info:
  title: ChatGPT Archive Utility API
  version: "0.1.0"
paths:
  /archives:
    post:
      summary: Create an archive from uploaded ChatGPT export
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
      responses:
        '201':
          description: Archive created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
  /archives/{id}:
    get:
      summary: Get archive by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Archive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
    delete:
      summary: Delete archive
      responses:
        '204':
          description: Deleted
  /search:
    get:
      summary: Search user archives
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive'
  /webhook/clerk:
    post:
      summary: Clerk webhook endpoint for user lifecycle events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid signature
  /api/admin/users:
    get:
      summary: Get paginated list of users (admin only)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            maximum: 100
        - in: query
          name: search
          schema:
            type: string
      responses:
        '200':
          description: Paginated user list with stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
  /api/admin/users/export:
    get:
      summary: Export user data as CSV (admin only)
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [csv, json]
            default: csv
      responses:
        '200':
          description: User data export
          content:
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUser'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
  /api/admin/stats:
    get:
      summary: Get system statistics (admin only)
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStats'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
components:
  schemas:
    Archive:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        content:
          type: string
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              size:
                type: integer
              contentType:
                type: string
              url:
                type: string
              checksum:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AdminUser:
      type: object
      properties:
        id:
          type: string
        clerkId:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        archiveCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AdminUserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            totalPages:
              type: integer
            hasNext:
              type: boolean
            hasPrev:
              type: boolean
    AdminStats:
      type: object
      properties:
        totalUsers:
          type: integer
        totalArchives:
          type: integer
        archivesToday:
          type: integer
        archivesThisWeek:
          type: integer
        archivesThisMonth:
          type: integer
        storageUsed:
          type: integer
          description: Storage used in bytes
        averageArchivesPerUser:
          type: number
        topUsers:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
              email:
                type: string
              archiveCount:
                type: integer
